{"version":3,"sources":["utils/store.ts","utils/history.ts","components/Layout/Error.tsx","utils/catchErrors.tsx","components/Layout/Layout.tsx","components/Layout/NotFound.tsx","components/routes.tsx","components/Homepage/Homepage.tsx","components/App.tsx","serviceWorker.js","index.tsx"],"names":["history","createBrowserHistory","middlewares","routerMiddleware","thunk","createStore","combineReducers","router","connectRouter","composeWithDevTools","applyMiddleware","apply","styled","_templateObject","withTheme","_ref","theme","error","errorInfo","react","dist","narrow","style","margin","rhythm","textAlign","renderAs","concat","process","marginTop","react_router_dom","to","errorCatcher","WrappedComponent","_React$Component","_class","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","setState","Layout_Error","React","Layout","children","react_document_title_default","a","title","routes","path","component","exact","listen","location","action","catchErrors","es","store","esm","components_Layout_Layout","react_router","map","assign","NotFound","Boolean","window","hostname","match","ReactDOM","render","react_default","createElement","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.280f95fa.chunk.js","sourcesContent":["// Import all reducers\n\nimport history from \"./history\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { combineReducers } from \"redux\";\nimport { applyMiddleware, createStore } from \"redux\";\n\nconst createRootReducer = (history) => combineReducers({\n\trouter: connectRouter(history),\n})\n\nconst middlewares = [routerMiddleware(history), thunk];\n\nexport default createStore(\n\tcreateRootReducer(history),\n\tcomposeWithDevTools(applyMiddleware(...middlewares))\n);\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Column, Text, withTheme, ThemeResult } from \"@varius.io/wombo\";\nimport styled from \"@emotion/styled\";\n\nconst StyledDetails = styled(\"details\")`\n\ttext-align: left;\n\tmargin: 0 auto;\n\tmax-width: 650px;\n\twidth: 100%;\n\twhite-space: pre-wrap;\n`;\n\nexport interface ErrorProps {\n\ttheme: ThemeResult;\n\terror: any;\n\terrorInfo: any;\n}\n\nconst Error = ({ theme, error, errorInfo }: ErrorProps) => (\n\t<Container narrow>\n\t\t<Row\n\t\t\tstyle={{\n\t\t\t\tmargin: theme.rhythm(3),\n\t\t\t\ttextAlign: \"center\",\n\t\t\t}}\n\t\t>\n\t\t\t<Column>\n\t\t\t\t<Text renderAs=\"h1\">We're sorry, but something went wrong.</Text>\n\t\t\t\t<Text\n\t\t\t\t\trenderAs=\"h3\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmargin: `${theme.rhythm(1)} 0 ${theme.rhythm(1)}`,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tWe apologize for any inconvenience. Our team has been notified.\n\t\t\t\t</Text>\n\n\t\t\t\t{process.env.NODE_ENV !== \"production\" && (\n\t\t\t\t\t<StyledDetails>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmargin: `${theme.rhythm(1)} 0 0`,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<strong>{error && error.toString()}</strong>\n\t\t\t\t\t\t</Text>\n\n\t\t\t\t\t\t<Text>{errorInfo.componentStack}</Text>\n\t\t\t\t\t</StyledDetails>\n\t\t\t\t)}\n\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginTop: theme.rhythm(4),\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Link to=\"/\">Return to Studio</Link>\n\t\t\t\t</div>\n\t\t\t</Column>\n\t\t</Row>\n\t</Container>\n);\n\nexport default withTheme(Error);\n","import * as React from \"react\";\nimport Error from \"components/Layout/Error\";\n\ninterface ErrorState {\n\terror: any;\n\terrorInfo: any;\n}\n\nconst errorCatcher = WrappedComponent => {\n\treturn class extends React.Component<any, ErrorState> {\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\n\t\t\tthis.state = {\n\t\t\t\terror: null,\n\t\t\t\terrorInfo: null,\n\t\t\t};\n\t\t}\n\n\t\tcomponentDidCatch(error, errorInfo) {\n\t\t\tthis.setState({ error, errorInfo });\n\t\t}\n\n\t\trender() {\n\t\t\tif (this.state.error) {\n\t\t\t\treturn <Error {...this.state} />;\n\t\t\t}\n\n\t\t\treturn <WrappedComponent {...this.props} />;\n\t\t}\n\t};\n};\n\nexport default errorCatcher;\n","import * as React from \"react\"\n\ninterface Props {\n\tchildren?: any;\n}\n\nconst Layout = ({\n\tchildren\n}: Props) => (\n\t<div>\n\t\t{children}\n\t</div>\n)\n\nexport default Layout;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Column, Text, withTheme, ThemeResult } from \"@varius.io/wombo\";\nimport DocumentTitle from \"react-document-title\";\n\nexport interface NotFoundProps {\n\ttheme: ThemeResult;\n}\n\nconst NotFound = ({ theme }: NotFoundProps) => (\n\t<DocumentTitle title=\"Page Not Found | Varius Studio\">\n\t\t<Container narrow>\n\t\t\t<Row\n\t\t\t\tstyle={{\n\t\t\t\t\tmargin: theme.rhythm(3),\n\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Column>\n\t\t\t\t\t<Text renderAs=\"h1\">Look at you, you hacker you.</Text>\n\n\t\t\t\t\t<Text\n\t\t\t\t\t\trenderAs=\"h3\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginTop: theme.rhythm(1),\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tError Code: 404\n\t\t\t\t\t</Text>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginTop: theme.rhythm(4),\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Link to=\"/\">Return to Homepage</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</Column>\n\t\t\t</Row>\n\t\t</Container>\n\t</DocumentTitle>\n);\n\nexport default withTheme(NotFound);\n","import * as React from \"react\";\n\n// Route Components\nimport Homepage from \"components/Homepage/Homepage\"\nimport { RouteComponentProps } from \"react-router\";\n\nexport interface Route {\n\tpath: string;\n\tcomponent: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n\texact?: boolean;\n}\n\n// Unauthenticated Routes\nconst routes: Route[] = [\n\t{\n\t\tpath: \"/\",\n\t\tcomponent: Homepage,\n\t\texact: true,\n\t},\n];\n\nexport default routes;\n","import * as React from \"react\";\nimport { Container, Column, Row, Text } from \"@varius.io/wombo\";\nimport DocumentTitle from \"react-document-title\";\n\nconst Homepage = () => (\n\t<DocumentTitle title=\"BillBergquist.com | Homepage\">\n\t\t<Container>\n\t\t\t<Row>\n\t\t\t\t<Column>\n\t\t\t\t\t<Text renderAs=\"h1\">Hello World!</Text>\n\t\t\t\t</Column>\n\t\t\t</Row>\n\t\t</Container>\n\t</DocumentTitle>\n)\n\nexport default Homepage;\n","import * as React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"utils/store\";\nimport history from \"utils/history\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport catchErrors from \"utils/catchErrors\";\nimport DocumentTitle from \"react-document-title\";\n\n// Components\nimport Layout from \"components/Layout/Layout\"\nimport NotFound from \"components/Layout/NotFound\";\n\n// array of routes\nimport routes from \"./routes\";\n\n// having throttling issues\nhistory.listen((location, action) => {\n\tif (action === \"POP\") {\n\t\treturn;\n\t}\n});\n\nconst App = () => {\n\treturn (\n\t\t<DocumentTitle title=\"BillBergquist.com\">\n\t\t\t<Provider store={store}>\n\t\t\t\t<ConnectedRouter history={history}>\n\t\t\t\t\t<Layout>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t{routes.map((props, key) => (\n\t\t\t\t\t\t\t\t<Route key={key} {...props} />\n\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Layout>\n\t\t\t\t</ConnectedRouter>\n\t\t\t</Provider>\n\t\t</DocumentTitle>\n\t);\n};\n\nexport default catchErrors(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}